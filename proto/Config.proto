syntax = "proto3";
//option optimize_for = LITE_RUNTIME;

option csharp_namespace = "Logger.Protos";

package OssianConfig;

message SerialPort {
	string portName = 1;
	int32 baudrate = 2;
	enum Parity {
		NoParity = 0; // 无校验
		OddParity = 1; // 奇校验
		EvenParity = 2; // 偶校验
		MarkParity = 3; // 标记校验
	}
	Parity parity = 3;
	int32 dataBit = 4;
	enum StopBit {
		OneStopBit = 0; // 1位停止位
		One5StopBits = 1; // 1.5位停止位
		TwoStopBits = 2; // 2位停止位
	}
	StopBit stopBit = 5;
	bool synchronize = 6;
	int32 syncInterval = 7;
}

message Camera {
	 int32 deviceIndex = 1;
	 int32 frameWidth = 2;
	 int32 frameHeight = 3;
}

message TestVideoSource {
	 string filename = 1;
}

message Aimbot {
	enum EnemyColor {
		Blue = 0; // 蓝色敌人
		Red = 2; // 红色敌人
	}
	EnemyColor enemyColor = 1;

	int32 brightness = 2;
	int32 thresColor = 3;

	double lightBarMinArea = 4;
	double lightBarContourMinSolidity = 5;
	double lightBarEllipseMinAspectRatio = 6;

	double armorMaxAngleDiff = 7;
	double armorMaxHeightDiffRatio = 8;
	double armorMaxYDiffRatio = 9;
	double armorMinXDiffRatio = 10;
	double armorBigArmorRatio = 11;
	double armorSmallArmorRatio = 12;
	double armorMinAspectRatio = 13;
	double armorMaxAspectRatio = 14;

	double areaNormalizedBase = 15;
	double sightOffsetNormalizedBase = 16;
}

message PoseSolver {
	 double cameraToGimbalX = 1;
	 double cameraToGimbalY = 2;
	 double cameraToGimbalZ = 3;
	 double barrelToGimbalY = 4;
	 double rotOverlapLen = 5;

	 double initV = 6;
	 double initK = 7;
	 double gravity = 8;
	 double scaleDist = 9;
}

message Chassis {  
	 double kTopWz = 1;
	 double kVxFilterCoef = 2;
	 double kVyFilterCoef = 3;
} 

message Gimbal {

}

message Gun {
	 int32 kFricSpeed12 = 1;
	 int32 kFricSpeed15 = 2;
	 int32 kFricSpeed18 = 3;
	 int32 kFricSpeed30 = 4;

	 int32 kFeedNormalRPM = 5;
	 int32 kFeedSemiRPM = 6;
	 int32 kFeedBurstRPM = 7;
	 int32 kFeedAutoRPM = 8;
}

message PIDParams {
	 double kP = 1;
	 double kI = 2;
	 double kD = 3;
	 double thOut = 4;
	 double thIOut = 5;
}

message Configuration {
	 SerialPort serialPort = 1;
	 Camera camera = 2;
	 TestVideoSource testVideoSource = 3;
	 Aimbot aimbot = 4;
	 PoseSolver poseSolver = 5;
	 Chassis chassis = 6;
	 Gimbal gimbal = 7;
	 Gun gun = 8;
	 PIDParams pidWheelSpeed = 9;
	 PIDParams pidChassisAngle = 10;
	 PIDParams pidAngleEcdPitch = 11;
	 PIDParams pidAngleGyroPitch = 12;
	 PIDParams pidAngleSpeedPitch = 13;
	 PIDParams pidAngleEcdYaw = 14;
	 PIDParams pidAngleGyroYaw = 15;
	 PIDParams pidAngleSpeedYaw = 16;
	 PIDParams pidFricSpeed = 17;
	 PIDParams pidFeedSpeed = 18;
}

message GetConfigurationRequest{}

message ArchiveConfigurationRequest{
	string logId = 1;
	Configuration config = 2;
}

message ArchiveConfigurationResponse{}

service ConfigurationService {
	rpc GetConfiguration(GetConfigurationRequest) returns (Configuration){}
	rpc ArchiveConfiguration(ArchiveConfigurationRequest) returns (ArchiveConfigurationResponse){}
}